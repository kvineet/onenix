# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
if [[ -r "/home/kvineet/.cache/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
   source  "/home/kvineet/.cache/p10k-instant-prompt-${(%):-%n}.zsh"
fi

HISTFILE=~/.cache/histfile
HISTSIZE=10000
SAVEHIST=10000

## Keybindings section
bindkey -e
bindkey '^[[7~' beginning-of-line                               # Home key
bindkey '^[[H' beginning-of-line                                # Home key
if [[ "${terminfo[khome]}" != "" ]]; then
  bindkey "${terminfo[khome]}" beginning-of-line                # [Home] - Go to beginning of line
fi
bindkey '^[[8~' end-of-line                                     # End key
bindkey '^[[F' end-of-line                                     # End key
if [[ "${terminfo[kend]}" != "" ]]; then
  bindkey "${terminfo[kend]}" end-of-line                       # [End] - Go to end of line
fi
bindkey '^[[2~' overwrite-mode                                  # Insert key
bindkey '^[[3~' delete-char                                     # Delete key
bindkey '^[[C'  forward-char                                    # Right key
bindkey '^[[D'  backward-char                                   # Left key
bindkey '^[[5~' history-beginning-search-backward               # Page up key
bindkey '^[[6~' history-beginning-search-forward                # Page down key

# Navigate words with ctrl+arrow keys
bindkey '^[Oc' forward-word                                     #
bindkey '^[Od' backward-word                                    #
bindkey '^[[1;5D' backward-word                                 #
bindkey '^[[1;5C' forward-word                                  #
bindkey '^H' backward-kill-word                                 # delete previous word with ctrl+backspace
bindkey '^[[Z' undo                                             # Shift+tab undo last action

ZINIT_HOME="/home/kvineet/.local/share/zinit"
source "${ZINIT_HOME}/zinit.git/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit


# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk


zinit ice depth=1
zinit light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f "/home/kvineet/.config/zsh/.p10k.zsh" ]] || source "/home/kvineet/.config/zsh/.p10k.zsh"


zinit light zdharma-continuum/history-search-multi-word
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions
zplugin light "zdharma-continuum/zsh-diff-so-fancy"

zinit ice wait lucid
zinit light olets/zsh-abbr

zinit ice blockf atpull'zinit creinstall -q .'
zinit light zsh-users/zsh-completions

zinit light RobSis/zsh-completion-generator
zstyle :plugin:zsh-completion-generator programs aspell emacs ggrep tr cat legendary

zinit ice \
    as"completion" \
    id-as"kubectl-completion" \
    has"kubectl" \
    atclone"kubectl completion zsh > _kubectl" \
    atpull"%atclone" \
    nocompile
zinit light zdharma-continuum/null

# compdef kubecolor=kubectl

zinit ice \
    as"completion" \
    id-as"kubectl-klock-completion" \
    has"kubectl-klock" \
    atclone"kubectl klock completion zsh > _kubectl-klock" \
    atpull"%atclone" \
    nocompile
zinit light zdharma-continuum/null

zinit as"null" wait"1" lucid for \
    sbin    Fakerr/git-recall \
    sbin    cloneopts paulirish/git-open \
    sbin    paulirish/git-recent \
    sbin    davidosomething/git-my \
    sbin atload"export _MENU_THEME=legacy" \
            arzzen/git-quick-stats \
    sbin    iwata/git-now \
    make"PREFIX=$ZPFX install" \
    tj/git-extras

zplugin ice as"program" pick"$ZPFX/bin/git-(url|guclone)" make"install PREFIX=$ZPFX"
zplugin light zdharma-continuum/git-url

zinit ice \
    as"completion" \
    id-as"yq-completion" \
    has"yq" \
    atclone"yq shell-completion zsh > _yq" \
    atpull"%atclone" \
    nocompile
zinit light zdharma-continuum/null

autoload -Uz compinit
compinit

zinit cdreplay -q
